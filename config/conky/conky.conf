conky.config = {
    out_to_x = false,
    own_window = false,
    out_to_console = true,
    background = false,
    max_text_width = 0,

    -- Update interval in seconds
        update_interval = 1.0,

    -- This is the number of times Conky will update before quitting.
        -- Set to zero to run forever.
        total_run_times = 0,

    -- Shortens units to a single character (kiB->k, GiB->G, etc.). Default is off.
        short_units = true,

    -- How strict should if_up be when testing an interface for being up?
        -- The value is one of up, link or address, to check for the interface
        -- being solely up, being up and having link or being up, having link
        -- and an assigned IP address. 
        if_up_strictness = 'address',

    -- Add spaces to keep things from moving about?  This only affects certain objects.
        -- use_spacer should have an argument of left, right, or none
        use_spacer = 'left',

    -- Force UTF8? note that UTF8 support required XFT
        override_utf8_locale = false,

    -- number of cpu samples to average
        -- set to 1 to disable averaging
        cpu_avg_samples = 2,
};

conky.text = [[
    [
#Wifi
{"full_text": "${if_up wlp1s0}   ${wireless_essid wlp1s0}[${addrs wlp1s0} ${wireless_link_qual_perc wlp1s0}% ${downspeed wlp1s0}] ${else} DOWN ${endif} ", "color": "${if_up wlp1s0}\#00FF00${else}\#FF0000${endif}", "separator": false, "separator_block_width":30},
#Volume
{"full_text": "  ${exec amixer -c 0 get Master | grep Mono: | cut -d " " -f6 | sed -r 's/\[|\]//g'} ", "color":"${if_empty ${exec amixer -c 0 get Master | grep Mono: | grep '\[on\]'}}\#FF0000${else}\#FFFFFF${endif}", "separator": false, "separator_block_width":30},
#Brightness
{ "full_text": "  ${exec xbacklight| awk '{printf("%d\n",$1 + 0.5)}'}% ", "color":"\#FFFFFF", "separator": false, "separator_block_width":30},
#CPU
{"full_text": "  $cpu%${hwmon 2 temp 1}℃", "color":"\#FFFFFF", "separator": false, "separator_block_width":30},
#Pacman
{"full_text":"  ${execi 200 checkupdates | wc -l}","color":"\#FFFFFF","separator":false,"separator_block_width":30},
#RAM
{ "full_text": "  ${memeasyfree} left " , "color": ${if_match ${memperc}<90}"\#FFFFFF"${else}"\#ff0000"${endif}, "separator":false, "separator_block_width":30},
#Battery 
{"full_text":"  ${battery} ","color":"${if_match ${battery_percent BAT0} <= 30}\#FF0000${else}\#FFFFFF${endif}","separator":false,"separator_block_width":30},
#Calender/time
#{"full_text": "  ${time %a %d %b} ","color": "\#2E9AFE", "separator": false, "separator_block_width":30},
{"full_text": "  ${time %a %d %b}  ${time %H:%M:%S}","color":"\#11F2E4","separator":false,"separator_block_width":30}
    ],
]];
